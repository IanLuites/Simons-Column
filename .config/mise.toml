[env]
  RUST_LOG = "info"

[tools]
  # For now keep tools in repository root.
  # Potential move these to the respective python/, rust/ directories.
  node = "23.2"
  pnpm = "latest"
  python = "3"
  rust = "1.82"

[tasks]
  [tasks."connected"]
    description = "Checks whether connected to remote device."
    hide = true

    dir = "ssh"
    run = '[ -f ./remote ] || (echo "Not connected. Use: mise run connect <remote>" && exit 1)'

  [tasks."connect"]
    description = "Setup connection to a remote device."

    dir = "ssh"

    run = [
      'echo {{arg(name="host")}} > ./remote',
      '[ -f id_rsa ] || ssh-keygen -q -t rsa -b 4096 -f id_rsa -N ""',
      'ssh -q -o BatchMode=yes -o ConnectTimeout=5 -i id_rsa "$(cat ./remote)" exit || ssh-copy-id -i id_rsa.pub "$(cat ./remote)"',
    ]

    outputs = [
      ".config/ssh/remote",
      ".config/ssh/id_rsa",
      ".config/ssh/id_rsa.pub",
    ]

  [tasks.copy-to]
    description = "SCP copy to a device using the dev keys from the repo."

    dir = "{{cwd}}"
    run = 'scp -i "$(git rev-parse --show-toplevel)/.config/ssh/id_rsa" -r "{{arg(name="local")}}" "$(cat "$(git rev-parse --show-toplevel)/.config/ssh/remote"):{{arg(name="remote")}}"'

    depends = ["connected"]

  [tasks.copy-from]
    description = "SCP copy from a device using the dev keys from the repo."

    dir = "{{cwd}}"
    run = 'scp -i "$(git rev-parse --show-toplevel)/.config/ssh/id_rsa" -r "$(cat "$(git rev-parse --show-toplevel)/.config/ssh/remote"):{{arg(name="remote")}}" "{{arg(name="local")}}"'

    depends = ["connected"]

  [tasks.ssh]
    description = "SSH into a device using the dev keys from the repo."

    dir = "ssh"
    run = 'ssh -i id_rsa "$(cat ./remote)"'

    depends = ["connected"]

  [tasks."install:benchmarker:rpi"]
    description = "Install benchmarker on a RPi 3, 4, and 5 or similar."

    dir = '../rust/'
    run = [
      'mise run copy-to "target/aarch64-unknown-linux-gnu/release/benchmarker" "benchmarker"',
      'mise run ssh -o BatchMode=yes sudo mv benchmarker /usr/local/bin/benchmarker',
    ]

    depends = ["compile:benchmarker:rpi"]

  [tasks."benchmark:rpi"]
    description = "Run benchmark on the RPi 3, 4, and 5."

    dir = ".."

    run = [
      # Create temporary directory for benchmarks
      'rm -Rf ./tmp',
      'mkdir ./tmp',
      'echo "{{arg(name="benchmark")}}" > ./tmp/benchmark',

      # Copy: Config
      'cp "./docs/benchmarks/$(cat ./tmp/benchmark)/config.toml" "./tmp/config.toml"',
      #       Python
      "rsync -av --quiet --include '*/' --include '*.py' --exclude '*' \"./docs/benchmarks/$(cat ./tmp/benchmark)/python/\" './tmp/python/'",
      #       Rust
      "find ./docs/benchmarks/$(cat ./tmp/benchmark)/rust -mindepth 1 -maxdepth 1 -type d -exec /usr/bin/env sh -c 'cd \"{}\" && cargo build --release --target aarch64-unknown-linux-gnu'  \\;",
      """
      find ./docs/benchmarks/$(cat ./tmp/benchmark)/rust/*/target/aarch64-unknown-linux-gnu/release/ -maxdepth 1 -type f -executable -exec /usr/bin/env sh -c '
        for file; do
          subdir=$(echo "$file" | sed -E "s|^\\./docs/benchmarks/$(cat ./tmp/benchmark)/rust/([^/]+)/.*$|\\1|")
          mkdir -p "./tmp/rust/$subdir"
          cp "$file" "./tmp/rust/$subdir/"
        done
      ' /usr/bin/env {} +
      """,

      # Upload and execute
      'mise run ssh -o BatchMode=yes rm -Rf ./benchmark',
      'mise run copy-to ./tmp benchmark',
      'mise run ssh "cd benchmark && benchmarker"',

      # Fetch results
      'mise run copy-from benchmark/results.json ./tmp/results.json',

      # Display
      'jq < ./tmp/results.json',

      # Cleanup
      'rm -Rf ./tmp',
    ]

    depends = ["install:benchmarker:rpi"]

  [tasks."target:rpi"]
    description = "Compile target for RPi 3, 4, and 5"
    hide = true

    run = 'rustup target add aarch64-unknown-linux-gnu'


  [tasks."compile:benchmarker:rpi"]
    description = "Compile the benchmarker for RPi 3, 4, and 5"

    dir = "../rust"
    run = 'cargo build -p benchmarker --target aarch64-unknown-linux-gnu {{option(name="mode",default="--release")}}'

    depends = ["target:rpi"]
    outputs = ["rust/target/aarch64-unknown-linux-gnu/release/benchmarker"]
    sources = ["rust/bin/benchmarker"]


  [tasks."compile:server:rpi"]
    description = "Compile the light server for RPi 3, 4, and 5"

    dir = "../rust"
    run = 'cargo build -p server --target aarch64-unknown-linux-gnu {{option(name="mode",default="--release")}}'

    depends = ["target:rpi"]
    outputs = ["rust/target/aarch64-unknown-linux-gnu/release/server"]
    sources = ["rust/bin/server"]


  [tasks."compile:emulator"]
    description = "Compile the TPIC6C596 emulator"
    hide = true

    dir = "../rust"
    run = "cargo build --release -p emulator"

    outputs = ["rust/target/release/emulator"]
    sources = ["rust/bin/emulator"]

  [tasks.emulator]
    description = "TPIC6C596 emulator"

    dir = '../rust'
    run = "target/release/emulator"

    depends = ["compile:emulator"]

  [tasks.example]
    description = "Run python example."

    dir = '../python'
    run = 'examples/{{arg(name="example")}}.py'
